# Sintexis de GitHub Actions:
# https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions

# El Contexto es una forma de acceder a la información de los Workflows
# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs

# Marketplace
# https://github.com/marketplace

# Compartir información entre jobs
# https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/passing-information-between-jobs


name: "Class 2: Deploy to server"

on: push

jobs:
  first_job:
    # Nombre del job (visible al ejecutarse)
    name: First Job
    # Cada job necesita definir su ambiente de ejecución
    runs-on: ubuntu-latest
    # Definición de variables de entorno a nivel job
    env:
      NAME: JuanFelipe - JB

    # Outputs de un job
    outputs:
      # Ejemplo key-value
      salida: ${{ steps.set-my-variable.outputs.my_variable }}

    steps:
      - name: Hola Mundo
        run: echo "Hola Mundo - Variable entorno $NAME"
      
      - name: List working dir and set variable
        run: ls -al

      # Compartir información a nivel step
      - name: Set a variable
        # Asignar un id al step para referenciarlo en otro step mediante contexto
        id: set-my-variable
        run: echo "my_variable=Hola Mundo" >> $GITHUB_OUTPUT

      # Acceder a información compartida a nivel step
      - name: Obetener output del step set-my-variable
        # Se accede al step mediante el contexto
        run: echo "${{ steps.set-my-variable.outputs.my_variable }}"

      # Usando una action de GitHub
      - name: Uses an Action
        uses: actions/checkout@v4
        # With sirve para pasar parámetros al action 
        # with:
        #   param: 1

      - name: List working dir
        run: ls -al


  second_job:
    name: Second Job
    # Condicional para ejecutar el job solo cuando la referencia sea main
    if: ${{ github.ref == 'refs/heads/main' }}

    # Este job solo se ejecuta despues de ejecutar el first_job
    # Si first_job falla, este job no se ejecuta
    needs: first_job
    runs-on: ubuntu-latest

    # Opción para obtener información de un job y asignarlo a una variable de entorno
    env:
      SALIDA: ${{ needs.first_job.outputs.salida }}

    steps:
      - name: Hola Mundo
        run: echo "Hola Mundo segundo job | ${{ github.ref }}"

      - name: Información del first_job con env
        # Imprimir el valor de la variable de entorno
        run: echo "$SALIDA"

      - name: Información del first_job directamente del contexto
        # Imprimir el valor del contexto
        run: echo ${{ needs.first_job.outputs.salida }}
